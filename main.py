import os
import re
import requests
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import Dispatcher, MessageHandler, Filters, CommandHandler
from keep_alive import keep_alive

TOKEN = os.getenv("TOKEN")  # –£—Å—Ç–∞–Ω–æ–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Render
OWNER_ID = int(os.getenv("OWNER_ID"))  # —Ç–æ–∂–µ –≤ Render: 908080934

bot = Bot(token=TOKEN)
app = Flask(__name__)
dispatcher = Dispatcher(bot, None, workers=0)

# –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏
def is_phishing_link(url):
    patterns = ["login", "secure", ".xyz", ".zip", "@", "paypal", "verify"]
    return any(p in url.lower() for p in patterns)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Ç–µ–±–µ
def notify_owner(original_message, sender_id):
    bot.send_message(chat_id=OWNER_ID, text=f"üö® –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∏—à–∏–Ω–≥–æ–≤–∞—è —Å—Å—ã–ª–∫–∞:\n–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {sender_id}:\n{original_message}")

# –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def handle_message(update, context):
    user_text = update.message.text
    sender_id = update.message.from_user.id  # ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    chat_id = update.message.chat_id

    urls = re.findall(r'https?://\S+', user_text)
    if urls:
        flagged = False
        for url in urls:
            if is_phishing_link(url):
                update.message.reply_text("‚ö†Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ñ–∏—à–∏–Ω–≥–æ–≤–∞—è —Å—Å—ã–ª–∫–∞!")
                notify_owner(user_text, sender_id)
                flagged = True
        if not flagged:
            update.message.reply_text("‚úÖ –°—Å—ã–ª–∫–∞ –≤—ã–≥–ª—è–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–π.")
    else:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É.")

def start(update, context):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É, —è –ø—Ä–æ–≤–µ—Ä—é –µ—ë –Ω–∞ —Ñ–∏—à–∏–Ω–≥.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

# Webhook Flask
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

keep_alive()

if __name__ == "__main__":
    bot.set_webhook(url=f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}")
    app.run(host="0.0.0.0", port=8080)

